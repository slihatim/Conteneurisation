apiVersion: v1
kind: ConfigMap
metadata:
  name: backend-configmap
  namespace: exam
data:
  POSTGRES_URL: jdbc:postgresql://postgres-service:5432/etudiants
---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  namespace: exam
spec:
  selector:
    app: backend
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
  namespace: exam
spec:
  replicas: 2
  selector:
    matchLabels:
      app: backend
  template: 
    metadata:
      labels:
        app: backend
    spec:
      containers:
        - name: backend
          image: slihatim/etudiants-backend:1.1
          env:
            - name: POSTGRES_URL
              valueFrom:
                configMapKeyRef:
                  name: backend-configmap
                  key: POSTGRES_URL
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_PASSWORD
          livenessProbe:
            httpGet:
              path: /healthz      # Endpoint pour vérifier la santé
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /readiness    # Endpoint pour vérifier la disponibilité
              port: 8080
            initialDelaySeconds: 3
            periodSeconds: 5
          startupProbe:
            httpGet:
              path: /startup      # Endpoint pour vérifier le démarrage
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 10
            
          ports:
            - containerPort: 8080
              name: backend-port
